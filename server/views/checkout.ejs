<%- include('head', { title: "Craft for a Cause" }); %>
<%- include('nav', { user: user }); %>


<div class="container">
<h2>Checkout</h2>
<div class="card" style="width: 100%;">
  <form action="/checkout/complete" method="post">
    <div class="card-content">
      <!-- Form -->
      <h4>Address</h4>
      <div class="input-field col s6">
        <input id="streetNo" name="streetNo" type="text" class="validate" required>
        <label for="streetNo" style="left: 0;">Street Number/Name</label>
      </div>
      <div class="input-field col s6">
        <input id="streetName" name="streetName" type="text" class="validate" required>
        <label for="streetName" style="left: 0;">Street Name</label>
      </div>
      <div class="input-field col s6">
        <input id="postcode" name="postcode" type="text" class="validate" required>
        <label for="postcode" style="left: 0;">Postcode</label>
      </div>

      <h4>Payment</h4>
      <div id="card-element">
        <!-- A Stripe Element will be inserted here. -->
      </div>
      <!-- End form -->

    </div>
    <div class="card-action">
      <button class="btn teal waves-effect waves-light">Submit</button>
    </div>
  </form>
</div>
</div>

<style>
/**
 * The CSS shown here will not be introduced in the Quickstart guide, but shows
 * how you can use CSS to style your Element's container.
 */
.StripeElement {
  background-color: white;
  height: 40px;
  width: 100%;
  margin-top: 20px;
  padding: 10px 12px;
  border-radius: 4px;
  border: 1px solid transparent;
  box-shadow: 0 1px 3px 0 #e6ebf1;
  -webkit-transition: box-shadow 150ms ease;
  transition: box-shadow 150ms ease;
}
.StripeElement--focus {
  box-shadow: 0 1px 3px 0 #cfd7df;
}
.StripeElement--invalid {
  border-color: #fa755a;
}
.StripeElement--webkit-autofill {
  background-color: #fefde5 !important;
}
</style>

<%- include('page_scripts'); %>

<script src="https://js.stripe.com/v3/"></script>
<script>
  // Create a Stripe client.
var stripe = Stripe('pk_test_M0fqk09L1guTJwEHZIxvw6u7');
// Create an instance of Elements.
var elements = stripe.elements();
// Custom styling can be passed to options when creating an Element.
// (Note that this demo uses a wider set of styles than the guide below.)
var style = {
  base: {
    color: '#32325d',
    lineHeight: '18px',
    fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
    fontSmoothing: 'antialiased',
    fontSize: '16px',
    '::placeholder': {
      color: '#aab7c4'
    }
  },
  invalid: {
    color: '#fa755a',
    iconColor: '#fa755a'
  }
};
// Create an instance of the card Element.
var card = elements.create('card', {style: style});
// Add an instance of the card Element into the `card-element` <div>.
card.mount('#card-element');
// Handle real-time validation errors from the card Element.
card.addEventListener('change', function(event) {
  var displayError = document.getElementById('card-errors');
  if (event.error) {
    displayError.textContent = event.error.message;
  } else {
    displayError.textContent = '';
  }
});
function stripeTokenHandler(token) {
  // Insert the token ID into the form so it gets submitted to the server
  var form = document.getElementById('payment-form');
  var hiddenInput = document.createElement('input');
  hiddenInput.setAttribute('type', 'hidden');
  hiddenInput.setAttribute('name', 'stripeToken');
  hiddenInput.setAttribute('value', token.id);
  form.appendChild(hiddenInput);
  // Submit the form
  form.submit();
}
// Handle form submission.
var form = document.getElementById('payment-form');
form.addEventListener('submit', function(event) {
  event.preventDefault();
  stripe.createToken(card).then(function(result) {
    if (result.error) {
      // Inform the user if there was an error.
      var errorElement = document.getElementById('card-errors');
      errorElement.textContent = result.error.message;
    } else {
      // Send the token to your server.
      stripeTokenHandler(result.token);
    }
  });
});
</script>

<%- include('foot'); %>
